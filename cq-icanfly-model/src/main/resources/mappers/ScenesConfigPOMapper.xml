<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeno.cqicanfly.mybatis.mapper.ScenesConfigPOMapper">
  <resultMap id="BaseResultMap" type="com.zeno.cqicanfly.mybatis.entity.ScenesConfigPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sceneid" jdbcType="INTEGER" property="sceneid" />
    <result column="sceneType" jdbcType="INTEGER" property="sceneType" />
    <result column="scencename" jdbcType="VARCHAR" property="scencename" />
    <result column="mapfilename" jdbcType="VARCHAR" property="mapfilename" />
    <result column="defaultX" jdbcType="INTEGER" property="defaultX" />
    <result column="defaultY" jdbcType="INTEGER" property="defaultY" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="refresh" jdbcType="VARCHAR" property="refresh" />
    <result column="npc" jdbcType="VARCHAR" property="npc" />
    <result column="teleport" jdbcType="VARCHAR" property="teleport" />
    <result column="music" jdbcType="VARCHAR" property="music" />
    <result column="ismini" jdbcType="INTEGER" property="ismini" />
    <result column="isHook" jdbcType="INTEGER" property="isHook" />
    <result column="hook" jdbcType="VARCHAR" property="hook" />
    <result column="safe" jdbcType="VARCHAR" property="safe" />
    <result column="mapGgroup" jdbcType="INTEGER" property="mapGgroup" />
    <result column="iscall" jdbcType="INTEGER" property="iscall" />
    <result column="particleId" jdbcType="INTEGER" property="particleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sceneid, sceneType, scencename, mapfilename, defaultX, defaultY, area, refresh, 
    npc, teleport, music, ismini, isHook, hook, safe, mapGgroup, iscall, particleId
  </sql>
  <select id="selectByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ScenesConfigPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ScenesConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ScenesConfig
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ScenesConfig
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ScenesConfigPOExample">
    delete from ScenesConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeno.cqicanfly.mybatis.entity.ScenesConfigPO">
    insert into ScenesConfig (id, sceneid, sceneType, 
      scencename, mapfilename, defaultX, 
      defaultY, area, refresh, 
      npc, teleport, music, 
      ismini, isHook, hook, 
      safe, mapGgroup, iscall, 
      particleId)
    values (#{id,jdbcType=INTEGER}, #{sceneid,jdbcType=INTEGER}, #{sceneType,jdbcType=INTEGER}, 
      #{scencename,jdbcType=VARCHAR}, #{mapfilename,jdbcType=VARCHAR}, #{defaultX,jdbcType=INTEGER}, 
      #{defaultY,jdbcType=INTEGER}, #{area,jdbcType=VARCHAR}, #{refresh,jdbcType=VARCHAR}, 
      #{npc,jdbcType=VARCHAR}, #{teleport,jdbcType=VARCHAR}, #{music,jdbcType=VARCHAR}, 
      #{ismini,jdbcType=INTEGER}, #{isHook,jdbcType=INTEGER}, #{hook,jdbcType=VARCHAR}, 
      #{safe,jdbcType=VARCHAR}, #{mapGgroup,jdbcType=INTEGER}, #{iscall,jdbcType=INTEGER}, 
      #{particleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zeno.cqicanfly.mybatis.entity.ScenesConfigPO">
    insert into ScenesConfig
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sceneid != null">
        sceneid,
      </if>
      <if test="sceneType != null">
        sceneType,
      </if>
      <if test="scencename != null">
        scencename,
      </if>
      <if test="mapfilename != null">
        mapfilename,
      </if>
      <if test="defaultX != null">
        defaultX,
      </if>
      <if test="defaultY != null">
        defaultY,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="refresh != null">
        refresh,
      </if>
      <if test="npc != null">
        npc,
      </if>
      <if test="teleport != null">
        teleport,
      </if>
      <if test="music != null">
        music,
      </if>
      <if test="ismini != null">
        ismini,
      </if>
      <if test="isHook != null">
        isHook,
      </if>
      <if test="hook != null">
        hook,
      </if>
      <if test="safe != null">
        safe,
      </if>
      <if test="mapGgroup != null">
        mapGgroup,
      </if>
      <if test="iscall != null">
        iscall,
      </if>
      <if test="particleId != null">
        particleId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sceneid != null">
        #{sceneid,jdbcType=INTEGER},
      </if>
      <if test="sceneType != null">
        #{sceneType,jdbcType=INTEGER},
      </if>
      <if test="scencename != null">
        #{scencename,jdbcType=VARCHAR},
      </if>
      <if test="mapfilename != null">
        #{mapfilename,jdbcType=VARCHAR},
      </if>
      <if test="defaultX != null">
        #{defaultX,jdbcType=INTEGER},
      </if>
      <if test="defaultY != null">
        #{defaultY,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="refresh != null">
        #{refresh,jdbcType=VARCHAR},
      </if>
      <if test="npc != null">
        #{npc,jdbcType=VARCHAR},
      </if>
      <if test="teleport != null">
        #{teleport,jdbcType=VARCHAR},
      </if>
      <if test="music != null">
        #{music,jdbcType=VARCHAR},
      </if>
      <if test="ismini != null">
        #{ismini,jdbcType=INTEGER},
      </if>
      <if test="isHook != null">
        #{isHook,jdbcType=INTEGER},
      </if>
      <if test="hook != null">
        #{hook,jdbcType=VARCHAR},
      </if>
      <if test="safe != null">
        #{safe,jdbcType=VARCHAR},
      </if>
      <if test="mapGgroup != null">
        #{mapGgroup,jdbcType=INTEGER},
      </if>
      <if test="iscall != null">
        #{iscall,jdbcType=INTEGER},
      </if>
      <if test="particleId != null">
        #{particleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ScenesConfigPOExample" resultType="java.lang.Long">
    select count(*) from ScenesConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ScenesConfig
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sceneid != null">
        sceneid = #{record.sceneid,jdbcType=INTEGER},
      </if>
      <if test="record.sceneType != null">
        sceneType = #{record.sceneType,jdbcType=INTEGER},
      </if>
      <if test="record.scencename != null">
        scencename = #{record.scencename,jdbcType=VARCHAR},
      </if>
      <if test="record.mapfilename != null">
        mapfilename = #{record.mapfilename,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultX != null">
        defaultX = #{record.defaultX,jdbcType=INTEGER},
      </if>
      <if test="record.defaultY != null">
        defaultY = #{record.defaultY,jdbcType=INTEGER},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.refresh != null">
        refresh = #{record.refresh,jdbcType=VARCHAR},
      </if>
      <if test="record.npc != null">
        npc = #{record.npc,jdbcType=VARCHAR},
      </if>
      <if test="record.teleport != null">
        teleport = #{record.teleport,jdbcType=VARCHAR},
      </if>
      <if test="record.music != null">
        music = #{record.music,jdbcType=VARCHAR},
      </if>
      <if test="record.ismini != null">
        ismini = #{record.ismini,jdbcType=INTEGER},
      </if>
      <if test="record.isHook != null">
        isHook = #{record.isHook,jdbcType=INTEGER},
      </if>
      <if test="record.hook != null">
        hook = #{record.hook,jdbcType=VARCHAR},
      </if>
      <if test="record.safe != null">
        safe = #{record.safe,jdbcType=VARCHAR},
      </if>
      <if test="record.mapGgroup != null">
        mapGgroup = #{record.mapGgroup,jdbcType=INTEGER},
      </if>
      <if test="record.iscall != null">
        iscall = #{record.iscall,jdbcType=INTEGER},
      </if>
      <if test="record.particleId != null">
        particleId = #{record.particleId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ScenesConfig
    set id = #{record.id,jdbcType=INTEGER},
      sceneid = #{record.sceneid,jdbcType=INTEGER},
      sceneType = #{record.sceneType,jdbcType=INTEGER},
      scencename = #{record.scencename,jdbcType=VARCHAR},
      mapfilename = #{record.mapfilename,jdbcType=VARCHAR},
      defaultX = #{record.defaultX,jdbcType=INTEGER},
      defaultY = #{record.defaultY,jdbcType=INTEGER},
      area = #{record.area,jdbcType=VARCHAR},
      refresh = #{record.refresh,jdbcType=VARCHAR},
      npc = #{record.npc,jdbcType=VARCHAR},
      teleport = #{record.teleport,jdbcType=VARCHAR},
      music = #{record.music,jdbcType=VARCHAR},
      ismini = #{record.ismini,jdbcType=INTEGER},
      isHook = #{record.isHook,jdbcType=INTEGER},
      hook = #{record.hook,jdbcType=VARCHAR},
      safe = #{record.safe,jdbcType=VARCHAR},
      mapGgroup = #{record.mapGgroup,jdbcType=INTEGER},
      iscall = #{record.iscall,jdbcType=INTEGER},
      particleId = #{record.particleId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeno.cqicanfly.mybatis.entity.ScenesConfigPO">
    update ScenesConfig
    <set>
      <if test="sceneid != null">
        sceneid = #{sceneid,jdbcType=INTEGER},
      </if>
      <if test="sceneType != null">
        sceneType = #{sceneType,jdbcType=INTEGER},
      </if>
      <if test="scencename != null">
        scencename = #{scencename,jdbcType=VARCHAR},
      </if>
      <if test="mapfilename != null">
        mapfilename = #{mapfilename,jdbcType=VARCHAR},
      </if>
      <if test="defaultX != null">
        defaultX = #{defaultX,jdbcType=INTEGER},
      </if>
      <if test="defaultY != null">
        defaultY = #{defaultY,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="refresh != null">
        refresh = #{refresh,jdbcType=VARCHAR},
      </if>
      <if test="npc != null">
        npc = #{npc,jdbcType=VARCHAR},
      </if>
      <if test="teleport != null">
        teleport = #{teleport,jdbcType=VARCHAR},
      </if>
      <if test="music != null">
        music = #{music,jdbcType=VARCHAR},
      </if>
      <if test="ismini != null">
        ismini = #{ismini,jdbcType=INTEGER},
      </if>
      <if test="isHook != null">
        isHook = #{isHook,jdbcType=INTEGER},
      </if>
      <if test="hook != null">
        hook = #{hook,jdbcType=VARCHAR},
      </if>
      <if test="safe != null">
        safe = #{safe,jdbcType=VARCHAR},
      </if>
      <if test="mapGgroup != null">
        mapGgroup = #{mapGgroup,jdbcType=INTEGER},
      </if>
      <if test="iscall != null">
        iscall = #{iscall,jdbcType=INTEGER},
      </if>
      <if test="particleId != null">
        particleId = #{particleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeno.cqicanfly.mybatis.entity.ScenesConfigPO">
    update ScenesConfig
    set sceneid = #{sceneid,jdbcType=INTEGER},
      sceneType = #{sceneType,jdbcType=INTEGER},
      scencename = #{scencename,jdbcType=VARCHAR},
      mapfilename = #{mapfilename,jdbcType=VARCHAR},
      defaultX = #{defaultX,jdbcType=INTEGER},
      defaultY = #{defaultY,jdbcType=INTEGER},
      area = #{area,jdbcType=VARCHAR},
      refresh = #{refresh,jdbcType=VARCHAR},
      npc = #{npc,jdbcType=VARCHAR},
      teleport = #{teleport,jdbcType=VARCHAR},
      music = #{music,jdbcType=VARCHAR},
      ismini = #{ismini,jdbcType=INTEGER},
      isHook = #{isHook,jdbcType=INTEGER},
      hook = #{hook,jdbcType=VARCHAR},
      safe = #{safe,jdbcType=VARCHAR},
      mapGgroup = #{mapGgroup,jdbcType=INTEGER},
      iscall = #{iscall,jdbcType=INTEGER},
      particleId = #{particleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>