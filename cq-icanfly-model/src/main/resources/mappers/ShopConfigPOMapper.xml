<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeno.cqicanfly.mybatis.mapper.ShopConfigPOMapper">
  <resultMap id="BaseResultMap" type="com.zeno.cqicanfly.mybatis.entity.ShopConfigPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="shopType" jdbcType="INTEGER" property="shopType" />
    <result column="tabShop" jdbcType="INTEGER" property="tabShop" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="shop" jdbcType="VARCHAR" property="shop" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="levellimit" jdbcType="INTEGER" property="levellimit" />
    <result column="reincarnationlimit" jdbcType="INTEGER" property="reincarnationlimit" />
    <result column="daylimit" jdbcType="INTEGER" property="daylimit" />
    <result column="buytype" jdbcType="VARCHAR" property="buytype" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="statictype" jdbcType="INTEGER" property="statictype" />
    <result column="npc" jdbcType="INTEGER" property="npc" />
    <result column="batchbuy" jdbcType="INTEGER" property="batchbuy" />
    <result column="Maxbatchbuy" jdbcType="INTEGER" property="maxbatchbuy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shopType, tabShop, shopid, shop, price, levellimit, reincarnationlimit, daylimit, 
    buytype, flag, statictype, npc, batchbuy, Maxbatchbuy
  </sql>
  <select id="selectByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ShopConfigPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ShopConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ShopConfig
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ShopConfig
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ShopConfigPOExample">
    delete from ShopConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeno.cqicanfly.mybatis.entity.ShopConfigPO">
    insert into ShopConfig (id, shopType, tabShop, 
      shopid, shop, price, 
      levellimit, reincarnationlimit, daylimit, 
      buytype, flag, statictype, 
      npc, batchbuy, Maxbatchbuy
      )
    values (#{id,jdbcType=INTEGER}, #{shopType,jdbcType=INTEGER}, #{tabShop,jdbcType=INTEGER}, 
      #{shopid,jdbcType=INTEGER}, #{shop,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, 
      #{levellimit,jdbcType=INTEGER}, #{reincarnationlimit,jdbcType=INTEGER}, #{daylimit,jdbcType=INTEGER}, 
      #{buytype,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, #{statictype,jdbcType=INTEGER}, 
      #{npc,jdbcType=INTEGER}, #{batchbuy,jdbcType=INTEGER}, #{maxbatchbuy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zeno.cqicanfly.mybatis.entity.ShopConfigPO">
    insert into ShopConfig
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopType != null">
        shopType,
      </if>
      <if test="tabShop != null">
        tabShop,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
      <if test="shop != null">
        shop,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="levellimit != null">
        levellimit,
      </if>
      <if test="reincarnationlimit != null">
        reincarnationlimit,
      </if>
      <if test="daylimit != null">
        daylimit,
      </if>
      <if test="buytype != null">
        buytype,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="statictype != null">
        statictype,
      </if>
      <if test="npc != null">
        npc,
      </if>
      <if test="batchbuy != null">
        batchbuy,
      </if>
      <if test="maxbatchbuy != null">
        Maxbatchbuy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopType != null">
        #{shopType,jdbcType=INTEGER},
      </if>
      <if test="tabShop != null">
        #{tabShop,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="shop != null">
        #{shop,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="levellimit != null">
        #{levellimit,jdbcType=INTEGER},
      </if>
      <if test="reincarnationlimit != null">
        #{reincarnationlimit,jdbcType=INTEGER},
      </if>
      <if test="daylimit != null">
        #{daylimit,jdbcType=INTEGER},
      </if>
      <if test="buytype != null">
        #{buytype,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="statictype != null">
        #{statictype,jdbcType=INTEGER},
      </if>
      <if test="npc != null">
        #{npc,jdbcType=INTEGER},
      </if>
      <if test="batchbuy != null">
        #{batchbuy,jdbcType=INTEGER},
      </if>
      <if test="maxbatchbuy != null">
        #{maxbatchbuy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ShopConfigPOExample" resultType="java.lang.Long">
    select count(*) from ShopConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ShopConfig
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopType != null">
        shopType = #{record.shopType,jdbcType=INTEGER},
      </if>
      <if test="record.tabShop != null">
        tabShop = #{record.tabShop,jdbcType=INTEGER},
      </if>
      <if test="record.shopid != null">
        shopid = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.shop != null">
        shop = #{record.shop,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.levellimit != null">
        levellimit = #{record.levellimit,jdbcType=INTEGER},
      </if>
      <if test="record.reincarnationlimit != null">
        reincarnationlimit = #{record.reincarnationlimit,jdbcType=INTEGER},
      </if>
      <if test="record.daylimit != null">
        daylimit = #{record.daylimit,jdbcType=INTEGER},
      </if>
      <if test="record.buytype != null">
        buytype = #{record.buytype,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.statictype != null">
        statictype = #{record.statictype,jdbcType=INTEGER},
      </if>
      <if test="record.npc != null">
        npc = #{record.npc,jdbcType=INTEGER},
      </if>
      <if test="record.batchbuy != null">
        batchbuy = #{record.batchbuy,jdbcType=INTEGER},
      </if>
      <if test="record.maxbatchbuy != null">
        Maxbatchbuy = #{record.maxbatchbuy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ShopConfig
    set id = #{record.id,jdbcType=INTEGER},
      shopType = #{record.shopType,jdbcType=INTEGER},
      tabShop = #{record.tabShop,jdbcType=INTEGER},
      shopid = #{record.shopid,jdbcType=INTEGER},
      shop = #{record.shop,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      levellimit = #{record.levellimit,jdbcType=INTEGER},
      reincarnationlimit = #{record.reincarnationlimit,jdbcType=INTEGER},
      daylimit = #{record.daylimit,jdbcType=INTEGER},
      buytype = #{record.buytype,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=VARCHAR},
      statictype = #{record.statictype,jdbcType=INTEGER},
      npc = #{record.npc,jdbcType=INTEGER},
      batchbuy = #{record.batchbuy,jdbcType=INTEGER},
      Maxbatchbuy = #{record.maxbatchbuy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeno.cqicanfly.mybatis.entity.ShopConfigPO">
    update ShopConfig
    <set>
      <if test="shopType != null">
        shopType = #{shopType,jdbcType=INTEGER},
      </if>
      <if test="tabShop != null">
        tabShop = #{tabShop,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="shop != null">
        shop = #{shop,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="levellimit != null">
        levellimit = #{levellimit,jdbcType=INTEGER},
      </if>
      <if test="reincarnationlimit != null">
        reincarnationlimit = #{reincarnationlimit,jdbcType=INTEGER},
      </if>
      <if test="daylimit != null">
        daylimit = #{daylimit,jdbcType=INTEGER},
      </if>
      <if test="buytype != null">
        buytype = #{buytype,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="statictype != null">
        statictype = #{statictype,jdbcType=INTEGER},
      </if>
      <if test="npc != null">
        npc = #{npc,jdbcType=INTEGER},
      </if>
      <if test="batchbuy != null">
        batchbuy = #{batchbuy,jdbcType=INTEGER},
      </if>
      <if test="maxbatchbuy != null">
        Maxbatchbuy = #{maxbatchbuy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeno.cqicanfly.mybatis.entity.ShopConfigPO">
    update ShopConfig
    set shopType = #{shopType,jdbcType=INTEGER},
      tabShop = #{tabShop,jdbcType=INTEGER},
      shopid = #{shopid,jdbcType=INTEGER},
      shop = #{shop,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      levellimit = #{levellimit,jdbcType=INTEGER},
      reincarnationlimit = #{reincarnationlimit,jdbcType=INTEGER},
      daylimit = #{daylimit,jdbcType=INTEGER},
      buytype = #{buytype,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      statictype = #{statictype,jdbcType=INTEGER},
      npc = #{npc,jdbcType=INTEGER},
      batchbuy = #{batchbuy,jdbcType=INTEGER},
      Maxbatchbuy = #{maxbatchbuy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>