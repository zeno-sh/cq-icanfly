<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeno.cqicanfly.mybatis.mapper.FileEditPOMapper">
  <resultMap id="BaseResultMap" type="com.zeno.cqicanfly.mybatis.entity.FileEditPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="file_id" jdbcType="INTEGER" property="fileId" />
    <result column="file_config" jdbcType="VARCHAR" property="fileConfig" />
    <result column="file_json" jdbcType="VARCHAR" property="fileJson" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="udpate_by" jdbcType="VARCHAR" property="udpateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, file_id, file_config, file_json, status, create_time, update_time, create_by, 
    udpate_by
  </sql>
  <select id="selectByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.FileEditPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from CQ_File_Edit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CQ_File_Edit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from CQ_File_Edit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.FileEditPOExample">
    delete from CQ_File_Edit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeno.cqicanfly.mybatis.entity.FileEditPO">
    insert into CQ_File_Edit (id, file_id, file_config, 
      file_json, status, create_time, 
      update_time, create_by, udpate_by
      )
    values (#{id,jdbcType=INTEGER}, #{fileId,jdbcType=INTEGER}, #{fileConfig,jdbcType=VARCHAR}, 
      #{fileJson,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{udpateBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zeno.cqicanfly.mybatis.entity.FileEditPO">
    insert into CQ_File_Edit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="fileConfig != null">
        file_config,
      </if>
      <if test="fileJson != null">
        file_json,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="udpateBy != null">
        udpate_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileConfig != null">
        #{fileConfig,jdbcType=VARCHAR},
      </if>
      <if test="fileJson != null">
        #{fileJson,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="udpateBy != null">
        #{udpateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.FileEditPOExample" resultType="java.lang.Long">
    select count(*) from CQ_File_Edit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update CQ_File_Edit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.fileConfig != null">
        file_config = #{record.fileConfig,jdbcType=VARCHAR},
      </if>
      <if test="record.fileJson != null">
        file_json = #{record.fileJson,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.udpateBy != null">
        udpate_by = #{record.udpateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update CQ_File_Edit
    set id = #{record.id,jdbcType=INTEGER},
      file_id = #{record.fileId,jdbcType=INTEGER},
      file_config = #{record.fileConfig,jdbcType=VARCHAR},
      file_json = #{record.fileJson,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      udpate_by = #{record.udpateBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeno.cqicanfly.mybatis.entity.FileEditPO">
    update CQ_File_Edit
    <set>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileConfig != null">
        file_config = #{fileConfig,jdbcType=VARCHAR},
      </if>
      <if test="fileJson != null">
        file_json = #{fileJson,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="udpateBy != null">
        udpate_by = #{udpateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeno.cqicanfly.mybatis.entity.FileEditPO">
    update CQ_File_Edit
    set file_id = #{fileId,jdbcType=INTEGER},
      file_config = #{fileConfig,jdbcType=VARCHAR},
      file_json = #{fileJson,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      udpate_by = #{udpateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>