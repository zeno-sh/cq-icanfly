<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeno.cqicanfly.mybatis.mapper.MonsterConfigPOMapper">
  <resultMap id="BaseResultMap" type="com.zeno.cqicanfly.mybatis.entity.MonsterConfigPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="entityid" jdbcType="INTEGER" property="entityid" />
    <result column="entityType" jdbcType="INTEGER" property="entityType" />
    <result column="monsterType" jdbcType="INTEGER" property="monsterType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="circle" jdbcType="INTEGER" property="circle" />
    <result column="aiConfigId" jdbcType="INTEGER" property="aiConfigId" />
    <result column="propid" jdbcType="INTEGER" property="propid" />
    <result column="flagid" jdbcType="INTEGER" property="flagid" />
    <result column="dropid" jdbcType="INTEGER" property="dropid" />
    <result column="exp" jdbcType="INTEGER" property="exp" />
    <result column="InnerExp" jdbcType="INTEGER" property="innerExp" />
    <result column="attackLevel" jdbcType="INTEGER" property="attackLevel" />
    <result column="attackInterval" jdbcType="INTEGER" property="attackInterval" />
    <result column="maxDropHp" jdbcType="INTEGER" property="maxDropHp" />
    <result column="damageSkill" jdbcType="INTEGER" property="damageSkill" />
    <result column="weaponid" jdbcType="INTEGER" property="weaponid" />
    <result column="swingid" jdbcType="INTEGER" property="swingid" />
    <result column="skills" jdbcType="VARCHAR" property="skills" />
    <result column="modelid" jdbcType="INTEGER" property="modelid" />
    <result column="dir" jdbcType="INTEGER" property="dir" />
    <result column="attackMusicId" jdbcType="VARCHAR" property="attackMusicId" />
    <result column="dieMusicId" jdbcType="VARCHAR" property="dieMusicId" />
    <result column="targetMusicId" jdbcType="VARCHAR" property="targetMusicId" />
    <result column="damageMusicId" jdbcType="VARCHAR" property="damageMusicId" />
    <result column="attackMusicRate" jdbcType="VARCHAR" property="attackMusicRate" />
    <result column="dieMusicRate" jdbcType="VARCHAR" property="dieMusicRate" />
    <result column="targetMusicTate" jdbcType="VARCHAR" property="targetMusicTate" />
    <result column="damageMusicRate" jdbcType="VARCHAR" property="damageMusicRate" />
    <result column="deatheff" jdbcType="VARCHAR" property="deatheff" />
    <result column="chassis" jdbcType="INTEGER" property="chassis" />
    <result column="shadow" jdbcType="INTEGER" property="shadow" />
    <result column="scale" jdbcType="INTEGER" property="scale" />
    <result column="hpLabXY" jdbcType="INTEGER" property="hpLabXY" />
    <result column="nameLabXY" jdbcType="INTEGER" property="nameLabXY" />
    <result column="isAIAck" jdbcType="INTEGER" property="isAIAck" />
    <result column="nameQuality" jdbcType="INTEGER" property="nameQuality" />
    <result column="monLog" jdbcType="INTEGER" property="monLog" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, entityid, entityType, monsterType, name, level, circle, aiConfigId, propid, flagid, 
    dropid, exp, InnerExp, attackLevel, attackInterval, maxDropHp, damageSkill, weaponid, 
    swingid, skills, modelid, dir, attackMusicId, dieMusicId, targetMusicId, damageMusicId, 
    attackMusicRate, dieMusicRate, targetMusicTate, damageMusicRate, deatheff, chassis, 
    shadow, scale, hpLabXY, nameLabXY, isAIAck, nameQuality, monLog
  </sql>
  <select id="selectByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.MonsterConfigPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from MonsterConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from MonsterConfig
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from MonsterConfig
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.MonsterConfigPOExample">
    delete from MonsterConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeno.cqicanfly.mybatis.entity.MonsterConfigPO">
    insert into MonsterConfig (id, entityid, entityType, 
      monsterType, name, level, 
      circle, aiConfigId, propid, 
      flagid, dropid, exp, 
      InnerExp, attackLevel, attackInterval, 
      maxDropHp, damageSkill, weaponid, 
      swingid, skills, modelid, 
      dir, attackMusicId, dieMusicId, 
      targetMusicId, damageMusicId, attackMusicRate, 
      dieMusicRate, targetMusicTate, damageMusicRate, 
      deatheff, chassis, shadow, 
      scale, hpLabXY, nameLabXY, 
      isAIAck, nameQuality, monLog
      )
    values (#{id,jdbcType=INTEGER}, #{entityid,jdbcType=INTEGER}, #{entityType,jdbcType=INTEGER}, 
      #{monsterType,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{circle,jdbcType=INTEGER}, #{aiConfigId,jdbcType=INTEGER}, #{propid,jdbcType=INTEGER}, 
      #{flagid,jdbcType=INTEGER}, #{dropid,jdbcType=INTEGER}, #{exp,jdbcType=INTEGER}, 
      #{innerExp,jdbcType=INTEGER}, #{attackLevel,jdbcType=INTEGER}, #{attackInterval,jdbcType=INTEGER}, 
      #{maxDropHp,jdbcType=INTEGER}, #{damageSkill,jdbcType=INTEGER}, #{weaponid,jdbcType=INTEGER}, 
      #{swingid,jdbcType=INTEGER}, #{skills,jdbcType=VARCHAR}, #{modelid,jdbcType=INTEGER}, 
      #{dir,jdbcType=INTEGER}, #{attackMusicId,jdbcType=VARCHAR}, #{dieMusicId,jdbcType=VARCHAR}, 
      #{targetMusicId,jdbcType=VARCHAR}, #{damageMusicId,jdbcType=VARCHAR}, #{attackMusicRate,jdbcType=VARCHAR}, 
      #{dieMusicRate,jdbcType=VARCHAR}, #{targetMusicTate,jdbcType=VARCHAR}, #{damageMusicRate,jdbcType=VARCHAR}, 
      #{deatheff,jdbcType=VARCHAR}, #{chassis,jdbcType=INTEGER}, #{shadow,jdbcType=INTEGER}, 
      #{scale,jdbcType=INTEGER}, #{hpLabXY,jdbcType=INTEGER}, #{nameLabXY,jdbcType=INTEGER}, 
      #{isAIAck,jdbcType=INTEGER}, #{nameQuality,jdbcType=INTEGER}, #{monLog,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zeno.cqicanfly.mybatis.entity.MonsterConfigPO">
    insert into MonsterConfig
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="entityid != null">
        entityid,
      </if>
      <if test="entityType != null">
        entityType,
      </if>
      <if test="monsterType != null">
        monsterType,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="circle != null">
        circle,
      </if>
      <if test="aiConfigId != null">
        aiConfigId,
      </if>
      <if test="propid != null">
        propid,
      </if>
      <if test="flagid != null">
        flagid,
      </if>
      <if test="dropid != null">
        dropid,
      </if>
      <if test="exp != null">
        exp,
      </if>
      <if test="innerExp != null">
        InnerExp,
      </if>
      <if test="attackLevel != null">
        attackLevel,
      </if>
      <if test="attackInterval != null">
        attackInterval,
      </if>
      <if test="maxDropHp != null">
        maxDropHp,
      </if>
      <if test="damageSkill != null">
        damageSkill,
      </if>
      <if test="weaponid != null">
        weaponid,
      </if>
      <if test="swingid != null">
        swingid,
      </if>
      <if test="skills != null">
        skills,
      </if>
      <if test="modelid != null">
        modelid,
      </if>
      <if test="dir != null">
        dir,
      </if>
      <if test="attackMusicId != null">
        attackMusicId,
      </if>
      <if test="dieMusicId != null">
        dieMusicId,
      </if>
      <if test="targetMusicId != null">
        targetMusicId,
      </if>
      <if test="damageMusicId != null">
        damageMusicId,
      </if>
      <if test="attackMusicRate != null">
        attackMusicRate,
      </if>
      <if test="dieMusicRate != null">
        dieMusicRate,
      </if>
      <if test="targetMusicTate != null">
        targetMusicTate,
      </if>
      <if test="damageMusicRate != null">
        damageMusicRate,
      </if>
      <if test="deatheff != null">
        deatheff,
      </if>
      <if test="chassis != null">
        chassis,
      </if>
      <if test="shadow != null">
        shadow,
      </if>
      <if test="scale != null">
        scale,
      </if>
      <if test="hpLabXY != null">
        hpLabXY,
      </if>
      <if test="nameLabXY != null">
        nameLabXY,
      </if>
      <if test="isAIAck != null">
        isAIAck,
      </if>
      <if test="nameQuality != null">
        nameQuality,
      </if>
      <if test="monLog != null">
        monLog,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="entityid != null">
        #{entityid,jdbcType=INTEGER},
      </if>
      <if test="entityType != null">
        #{entityType,jdbcType=INTEGER},
      </if>
      <if test="monsterType != null">
        #{monsterType,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="circle != null">
        #{circle,jdbcType=INTEGER},
      </if>
      <if test="aiConfigId != null">
        #{aiConfigId,jdbcType=INTEGER},
      </if>
      <if test="propid != null">
        #{propid,jdbcType=INTEGER},
      </if>
      <if test="flagid != null">
        #{flagid,jdbcType=INTEGER},
      </if>
      <if test="dropid != null">
        #{dropid,jdbcType=INTEGER},
      </if>
      <if test="exp != null">
        #{exp,jdbcType=INTEGER},
      </if>
      <if test="innerExp != null">
        #{innerExp,jdbcType=INTEGER},
      </if>
      <if test="attackLevel != null">
        #{attackLevel,jdbcType=INTEGER},
      </if>
      <if test="attackInterval != null">
        #{attackInterval,jdbcType=INTEGER},
      </if>
      <if test="maxDropHp != null">
        #{maxDropHp,jdbcType=INTEGER},
      </if>
      <if test="damageSkill != null">
        #{damageSkill,jdbcType=INTEGER},
      </if>
      <if test="weaponid != null">
        #{weaponid,jdbcType=INTEGER},
      </if>
      <if test="swingid != null">
        #{swingid,jdbcType=INTEGER},
      </if>
      <if test="skills != null">
        #{skills,jdbcType=VARCHAR},
      </if>
      <if test="modelid != null">
        #{modelid,jdbcType=INTEGER},
      </if>
      <if test="dir != null">
        #{dir,jdbcType=INTEGER},
      </if>
      <if test="attackMusicId != null">
        #{attackMusicId,jdbcType=VARCHAR},
      </if>
      <if test="dieMusicId != null">
        #{dieMusicId,jdbcType=VARCHAR},
      </if>
      <if test="targetMusicId != null">
        #{targetMusicId,jdbcType=VARCHAR},
      </if>
      <if test="damageMusicId != null">
        #{damageMusicId,jdbcType=VARCHAR},
      </if>
      <if test="attackMusicRate != null">
        #{attackMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="dieMusicRate != null">
        #{dieMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="targetMusicTate != null">
        #{targetMusicTate,jdbcType=VARCHAR},
      </if>
      <if test="damageMusicRate != null">
        #{damageMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="deatheff != null">
        #{deatheff,jdbcType=VARCHAR},
      </if>
      <if test="chassis != null">
        #{chassis,jdbcType=INTEGER},
      </if>
      <if test="shadow != null">
        #{shadow,jdbcType=INTEGER},
      </if>
      <if test="scale != null">
        #{scale,jdbcType=INTEGER},
      </if>
      <if test="hpLabXY != null">
        #{hpLabXY,jdbcType=INTEGER},
      </if>
      <if test="nameLabXY != null">
        #{nameLabXY,jdbcType=INTEGER},
      </if>
      <if test="isAIAck != null">
        #{isAIAck,jdbcType=INTEGER},
      </if>
      <if test="nameQuality != null">
        #{nameQuality,jdbcType=INTEGER},
      </if>
      <if test="monLog != null">
        #{monLog,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.MonsterConfigPOExample" resultType="java.lang.Long">
    select count(*) from MonsterConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update MonsterConfig
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.entityid != null">
        entityid = #{record.entityid,jdbcType=INTEGER},
      </if>
      <if test="record.entityType != null">
        entityType = #{record.entityType,jdbcType=INTEGER},
      </if>
      <if test="record.monsterType != null">
        monsterType = #{record.monsterType,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.circle != null">
        circle = #{record.circle,jdbcType=INTEGER},
      </if>
      <if test="record.aiConfigId != null">
        aiConfigId = #{record.aiConfigId,jdbcType=INTEGER},
      </if>
      <if test="record.propid != null">
        propid = #{record.propid,jdbcType=INTEGER},
      </if>
      <if test="record.flagid != null">
        flagid = #{record.flagid,jdbcType=INTEGER},
      </if>
      <if test="record.dropid != null">
        dropid = #{record.dropid,jdbcType=INTEGER},
      </if>
      <if test="record.exp != null">
        exp = #{record.exp,jdbcType=INTEGER},
      </if>
      <if test="record.innerExp != null">
        InnerExp = #{record.innerExp,jdbcType=INTEGER},
      </if>
      <if test="record.attackLevel != null">
        attackLevel = #{record.attackLevel,jdbcType=INTEGER},
      </if>
      <if test="record.attackInterval != null">
        attackInterval = #{record.attackInterval,jdbcType=INTEGER},
      </if>
      <if test="record.maxDropHp != null">
        maxDropHp = #{record.maxDropHp,jdbcType=INTEGER},
      </if>
      <if test="record.damageSkill != null">
        damageSkill = #{record.damageSkill,jdbcType=INTEGER},
      </if>
      <if test="record.weaponid != null">
        weaponid = #{record.weaponid,jdbcType=INTEGER},
      </if>
      <if test="record.swingid != null">
        swingid = #{record.swingid,jdbcType=INTEGER},
      </if>
      <if test="record.skills != null">
        skills = #{record.skills,jdbcType=VARCHAR},
      </if>
      <if test="record.modelid != null">
        modelid = #{record.modelid,jdbcType=INTEGER},
      </if>
      <if test="record.dir != null">
        dir = #{record.dir,jdbcType=INTEGER},
      </if>
      <if test="record.attackMusicId != null">
        attackMusicId = #{record.attackMusicId,jdbcType=VARCHAR},
      </if>
      <if test="record.dieMusicId != null">
        dieMusicId = #{record.dieMusicId,jdbcType=VARCHAR},
      </if>
      <if test="record.targetMusicId != null">
        targetMusicId = #{record.targetMusicId,jdbcType=VARCHAR},
      </if>
      <if test="record.damageMusicId != null">
        damageMusicId = #{record.damageMusicId,jdbcType=VARCHAR},
      </if>
      <if test="record.attackMusicRate != null">
        attackMusicRate = #{record.attackMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="record.dieMusicRate != null">
        dieMusicRate = #{record.dieMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="record.targetMusicTate != null">
        targetMusicTate = #{record.targetMusicTate,jdbcType=VARCHAR},
      </if>
      <if test="record.damageMusicRate != null">
        damageMusicRate = #{record.damageMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="record.deatheff != null">
        deatheff = #{record.deatheff,jdbcType=VARCHAR},
      </if>
      <if test="record.chassis != null">
        chassis = #{record.chassis,jdbcType=INTEGER},
      </if>
      <if test="record.shadow != null">
        shadow = #{record.shadow,jdbcType=INTEGER},
      </if>
      <if test="record.scale != null">
        scale = #{record.scale,jdbcType=INTEGER},
      </if>
      <if test="record.hpLabXY != null">
        hpLabXY = #{record.hpLabXY,jdbcType=INTEGER},
      </if>
      <if test="record.nameLabXY != null">
        nameLabXY = #{record.nameLabXY,jdbcType=INTEGER},
      </if>
      <if test="record.isAIAck != null">
        isAIAck = #{record.isAIAck,jdbcType=INTEGER},
      </if>
      <if test="record.nameQuality != null">
        nameQuality = #{record.nameQuality,jdbcType=INTEGER},
      </if>
      <if test="record.monLog != null">
        monLog = #{record.monLog,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update MonsterConfig
    set id = #{record.id,jdbcType=INTEGER},
      entityid = #{record.entityid,jdbcType=INTEGER},
      entityType = #{record.entityType,jdbcType=INTEGER},
      monsterType = #{record.monsterType,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      circle = #{record.circle,jdbcType=INTEGER},
      aiConfigId = #{record.aiConfigId,jdbcType=INTEGER},
      propid = #{record.propid,jdbcType=INTEGER},
      flagid = #{record.flagid,jdbcType=INTEGER},
      dropid = #{record.dropid,jdbcType=INTEGER},
      exp = #{record.exp,jdbcType=INTEGER},
      InnerExp = #{record.innerExp,jdbcType=INTEGER},
      attackLevel = #{record.attackLevel,jdbcType=INTEGER},
      attackInterval = #{record.attackInterval,jdbcType=INTEGER},
      maxDropHp = #{record.maxDropHp,jdbcType=INTEGER},
      damageSkill = #{record.damageSkill,jdbcType=INTEGER},
      weaponid = #{record.weaponid,jdbcType=INTEGER},
      swingid = #{record.swingid,jdbcType=INTEGER},
      skills = #{record.skills,jdbcType=VARCHAR},
      modelid = #{record.modelid,jdbcType=INTEGER},
      dir = #{record.dir,jdbcType=INTEGER},
      attackMusicId = #{record.attackMusicId,jdbcType=VARCHAR},
      dieMusicId = #{record.dieMusicId,jdbcType=VARCHAR},
      targetMusicId = #{record.targetMusicId,jdbcType=VARCHAR},
      damageMusicId = #{record.damageMusicId,jdbcType=VARCHAR},
      attackMusicRate = #{record.attackMusicRate,jdbcType=VARCHAR},
      dieMusicRate = #{record.dieMusicRate,jdbcType=VARCHAR},
      targetMusicTate = #{record.targetMusicTate,jdbcType=VARCHAR},
      damageMusicRate = #{record.damageMusicRate,jdbcType=VARCHAR},
      deatheff = #{record.deatheff,jdbcType=VARCHAR},
      chassis = #{record.chassis,jdbcType=INTEGER},
      shadow = #{record.shadow,jdbcType=INTEGER},
      scale = #{record.scale,jdbcType=INTEGER},
      hpLabXY = #{record.hpLabXY,jdbcType=INTEGER},
      nameLabXY = #{record.nameLabXY,jdbcType=INTEGER},
      isAIAck = #{record.isAIAck,jdbcType=INTEGER},
      nameQuality = #{record.nameQuality,jdbcType=INTEGER},
      monLog = #{record.monLog,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeno.cqicanfly.mybatis.entity.MonsterConfigPO">
    update MonsterConfig
    <set>
      <if test="entityid != null">
        entityid = #{entityid,jdbcType=INTEGER},
      </if>
      <if test="entityType != null">
        entityType = #{entityType,jdbcType=INTEGER},
      </if>
      <if test="monsterType != null">
        monsterType = #{monsterType,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="circle != null">
        circle = #{circle,jdbcType=INTEGER},
      </if>
      <if test="aiConfigId != null">
        aiConfigId = #{aiConfigId,jdbcType=INTEGER},
      </if>
      <if test="propid != null">
        propid = #{propid,jdbcType=INTEGER},
      </if>
      <if test="flagid != null">
        flagid = #{flagid,jdbcType=INTEGER},
      </if>
      <if test="dropid != null">
        dropid = #{dropid,jdbcType=INTEGER},
      </if>
      <if test="exp != null">
        exp = #{exp,jdbcType=INTEGER},
      </if>
      <if test="innerExp != null">
        InnerExp = #{innerExp,jdbcType=INTEGER},
      </if>
      <if test="attackLevel != null">
        attackLevel = #{attackLevel,jdbcType=INTEGER},
      </if>
      <if test="attackInterval != null">
        attackInterval = #{attackInterval,jdbcType=INTEGER},
      </if>
      <if test="maxDropHp != null">
        maxDropHp = #{maxDropHp,jdbcType=INTEGER},
      </if>
      <if test="damageSkill != null">
        damageSkill = #{damageSkill,jdbcType=INTEGER},
      </if>
      <if test="weaponid != null">
        weaponid = #{weaponid,jdbcType=INTEGER},
      </if>
      <if test="swingid != null">
        swingid = #{swingid,jdbcType=INTEGER},
      </if>
      <if test="skills != null">
        skills = #{skills,jdbcType=VARCHAR},
      </if>
      <if test="modelid != null">
        modelid = #{modelid,jdbcType=INTEGER},
      </if>
      <if test="dir != null">
        dir = #{dir,jdbcType=INTEGER},
      </if>
      <if test="attackMusicId != null">
        attackMusicId = #{attackMusicId,jdbcType=VARCHAR},
      </if>
      <if test="dieMusicId != null">
        dieMusicId = #{dieMusicId,jdbcType=VARCHAR},
      </if>
      <if test="targetMusicId != null">
        targetMusicId = #{targetMusicId,jdbcType=VARCHAR},
      </if>
      <if test="damageMusicId != null">
        damageMusicId = #{damageMusicId,jdbcType=VARCHAR},
      </if>
      <if test="attackMusicRate != null">
        attackMusicRate = #{attackMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="dieMusicRate != null">
        dieMusicRate = #{dieMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="targetMusicTate != null">
        targetMusicTate = #{targetMusicTate,jdbcType=VARCHAR},
      </if>
      <if test="damageMusicRate != null">
        damageMusicRate = #{damageMusicRate,jdbcType=VARCHAR},
      </if>
      <if test="deatheff != null">
        deatheff = #{deatheff,jdbcType=VARCHAR},
      </if>
      <if test="chassis != null">
        chassis = #{chassis,jdbcType=INTEGER},
      </if>
      <if test="shadow != null">
        shadow = #{shadow,jdbcType=INTEGER},
      </if>
      <if test="scale != null">
        scale = #{scale,jdbcType=INTEGER},
      </if>
      <if test="hpLabXY != null">
        hpLabXY = #{hpLabXY,jdbcType=INTEGER},
      </if>
      <if test="nameLabXY != null">
        nameLabXY = #{nameLabXY,jdbcType=INTEGER},
      </if>
      <if test="isAIAck != null">
        isAIAck = #{isAIAck,jdbcType=INTEGER},
      </if>
      <if test="nameQuality != null">
        nameQuality = #{nameQuality,jdbcType=INTEGER},
      </if>
      <if test="monLog != null">
        monLog = #{monLog,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeno.cqicanfly.mybatis.entity.MonsterConfigPO">
    update MonsterConfig
    set entityid = #{entityid,jdbcType=INTEGER},
      entityType = #{entityType,jdbcType=INTEGER},
      monsterType = #{monsterType,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      circle = #{circle,jdbcType=INTEGER},
      aiConfigId = #{aiConfigId,jdbcType=INTEGER},
      propid = #{propid,jdbcType=INTEGER},
      flagid = #{flagid,jdbcType=INTEGER},
      dropid = #{dropid,jdbcType=INTEGER},
      exp = #{exp,jdbcType=INTEGER},
      InnerExp = #{innerExp,jdbcType=INTEGER},
      attackLevel = #{attackLevel,jdbcType=INTEGER},
      attackInterval = #{attackInterval,jdbcType=INTEGER},
      maxDropHp = #{maxDropHp,jdbcType=INTEGER},
      damageSkill = #{damageSkill,jdbcType=INTEGER},
      weaponid = #{weaponid,jdbcType=INTEGER},
      swingid = #{swingid,jdbcType=INTEGER},
      skills = #{skills,jdbcType=VARCHAR},
      modelid = #{modelid,jdbcType=INTEGER},
      dir = #{dir,jdbcType=INTEGER},
      attackMusicId = #{attackMusicId,jdbcType=VARCHAR},
      dieMusicId = #{dieMusicId,jdbcType=VARCHAR},
      targetMusicId = #{targetMusicId,jdbcType=VARCHAR},
      damageMusicId = #{damageMusicId,jdbcType=VARCHAR},
      attackMusicRate = #{attackMusicRate,jdbcType=VARCHAR},
      dieMusicRate = #{dieMusicRate,jdbcType=VARCHAR},
      targetMusicTate = #{targetMusicTate,jdbcType=VARCHAR},
      damageMusicRate = #{damageMusicRate,jdbcType=VARCHAR},
      deatheff = #{deatheff,jdbcType=VARCHAR},
      chassis = #{chassis,jdbcType=INTEGER},
      shadow = #{shadow,jdbcType=INTEGER},
      scale = #{scale,jdbcType=INTEGER},
      hpLabXY = #{hpLabXY,jdbcType=INTEGER},
      nameLabXY = #{nameLabXY,jdbcType=INTEGER},
      isAIAck = #{isAIAck,jdbcType=INTEGER},
      nameQuality = #{nameQuality,jdbcType=INTEGER},
      monLog = #{monLog,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>