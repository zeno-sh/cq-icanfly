<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeno.cqicanfly.mybatis.mapper.PropsConfigPOMapper">
  <resultMap id="BaseResultMap" type="com.zeno.cqicanfly.mybatis.entity.PropsConfigPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="attrId" jdbcType="INTEGER" property="attrId" />
    <result column="nMaxHpAdd" jdbcType="INTEGER" property="nMaxHpAdd" />
    <result column="nMaxMpAdd" jdbcType="INTEGER" property="nMaxMpAdd" />
    <result column="nPhysicalAttackMinAdd" jdbcType="INTEGER" property="nPhysicalAttackMinAdd" />
    <result column="nPhysicalAttackMaxAdd" jdbcType="INTEGER" property="nPhysicalAttackMaxAdd" />
    <result column="nMagicAttackMinAdd" jdbcType="INTEGER" property="nMagicAttackMinAdd" />
    <result column="nMagicAttackMaxAdd" jdbcType="INTEGER" property="nMagicAttackMaxAdd" />
    <result column="nWizardAttackMinAdd" jdbcType="INTEGER" property="nWizardAttackMinAdd" />
    <result column="nWizardAttackMaxAdd" jdbcType="INTEGER" property="nWizardAttackMaxAdd" />
    <result column="nPhysicalDefenceMinAdd" jdbcType="INTEGER" property="nPhysicalDefenceMinAdd" />
    <result column="nPhysicalDefenceMaxAdd" jdbcType="INTEGER" property="nPhysicalDefenceMaxAdd" />
    <result column="nMagicDefenceMinAdd" jdbcType="INTEGER" property="nMagicDefenceMinAdd" />
    <result column="nMagicDefenceMaxAdd" jdbcType="INTEGER" property="nMagicDefenceMaxAdd" />
    <result column="nHitValueAdd" jdbcType="INTEGER" property="nHitValueAdd" />
    <result column="nDogValueAdd" jdbcType="INTEGER" property="nDogValueAdd" />
    <result column="nMagicHitRateAdd" jdbcType="INTEGER" property="nMagicHitRateAdd" />
    <result column="nMagicDogerateAdd" jdbcType="INTEGER" property="nMagicDogerateAdd" />
    <result column="fHpRateRenew" jdbcType="INTEGER" property="fHpRateRenew" />
    <result column="fMpRateRenew" jdbcType="INTEGER" property="fMpRateRenew" />
    <result column="nHpRenew" jdbcType="INTEGER" property="nHpRenew" />
    <result column="nMpRenew" jdbcType="INTEGER" property="nMpRenew" />
    <result column="nMoveOneSlotTime" jdbcType="INTEGER" property="nMoveOneSlotTime" />
    <result column="nAttackSpeed" jdbcType="INTEGER" property="nAttackSpeed" />
    <result column="aDeductDizzyRate" jdbcType="INTEGER" property="aDeductDizzyRate" />
    <result column="aDizzyTimeAbsorbAdd" jdbcType="INTEGER" property="aDizzyTimeAbsorbAdd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, attrId, nMaxHpAdd, nMaxMpAdd, nPhysicalAttackMinAdd, nPhysicalAttackMaxAdd, nMagicAttackMinAdd, 
    nMagicAttackMaxAdd, nWizardAttackMinAdd, nWizardAttackMaxAdd, nPhysicalDefenceMinAdd, 
    nPhysicalDefenceMaxAdd, nMagicDefenceMinAdd, nMagicDefenceMaxAdd, nHitValueAdd, nDogValueAdd, 
    nMagicHitRateAdd, nMagicDogerateAdd, fHpRateRenew, fMpRateRenew, nHpRenew, nMpRenew, 
    nMoveOneSlotTime, nAttackSpeed, aDeductDizzyRate, aDizzyTimeAbsorbAdd
  </sql>
  <select id="selectByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.PropsConfigPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from PropsConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PropsConfig
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from PropsConfig
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.PropsConfigPOExample">
    delete from PropsConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeno.cqicanfly.mybatis.entity.PropsConfigPO">
    insert into PropsConfig (id, attrId, nMaxHpAdd, 
      nMaxMpAdd, nPhysicalAttackMinAdd, nPhysicalAttackMaxAdd, 
      nMagicAttackMinAdd, nMagicAttackMaxAdd, 
      nWizardAttackMinAdd, nWizardAttackMaxAdd, 
      nPhysicalDefenceMinAdd, nPhysicalDefenceMaxAdd, 
      nMagicDefenceMinAdd, nMagicDefenceMaxAdd, 
      nHitValueAdd, nDogValueAdd, nMagicHitRateAdd, 
      nMagicDogerateAdd, fHpRateRenew, fMpRateRenew, 
      nHpRenew, nMpRenew, nMoveOneSlotTime, 
      nAttackSpeed, aDeductDizzyRate, aDizzyTimeAbsorbAdd
      )
    values (#{id,jdbcType=INTEGER}, #{attrId,jdbcType=INTEGER}, #{nMaxHpAdd,jdbcType=INTEGER}, 
      #{nMaxMpAdd,jdbcType=INTEGER}, #{nPhysicalAttackMinAdd,jdbcType=INTEGER}, #{nPhysicalAttackMaxAdd,jdbcType=INTEGER}, 
      #{nMagicAttackMinAdd,jdbcType=INTEGER}, #{nMagicAttackMaxAdd,jdbcType=INTEGER}, 
      #{nWizardAttackMinAdd,jdbcType=INTEGER}, #{nWizardAttackMaxAdd,jdbcType=INTEGER}, 
      #{nPhysicalDefenceMinAdd,jdbcType=INTEGER}, #{nPhysicalDefenceMaxAdd,jdbcType=INTEGER}, 
      #{nMagicDefenceMinAdd,jdbcType=INTEGER}, #{nMagicDefenceMaxAdd,jdbcType=INTEGER}, 
      #{nHitValueAdd,jdbcType=INTEGER}, #{nDogValueAdd,jdbcType=INTEGER}, #{nMagicHitRateAdd,jdbcType=INTEGER}, 
      #{nMagicDogerateAdd,jdbcType=INTEGER}, #{fHpRateRenew,jdbcType=INTEGER}, #{fMpRateRenew,jdbcType=INTEGER}, 
      #{nHpRenew,jdbcType=INTEGER}, #{nMpRenew,jdbcType=INTEGER}, #{nMoveOneSlotTime,jdbcType=INTEGER}, 
      #{nAttackSpeed,jdbcType=INTEGER}, #{aDeductDizzyRate,jdbcType=INTEGER}, #{aDizzyTimeAbsorbAdd,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zeno.cqicanfly.mybatis.entity.PropsConfigPO">
    insert into PropsConfig
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="attrId != null">
        attrId,
      </if>
      <if test="nMaxHpAdd != null">
        nMaxHpAdd,
      </if>
      <if test="nMaxMpAdd != null">
        nMaxMpAdd,
      </if>
      <if test="nPhysicalAttackMinAdd != null">
        nPhysicalAttackMinAdd,
      </if>
      <if test="nPhysicalAttackMaxAdd != null">
        nPhysicalAttackMaxAdd,
      </if>
      <if test="nMagicAttackMinAdd != null">
        nMagicAttackMinAdd,
      </if>
      <if test="nMagicAttackMaxAdd != null">
        nMagicAttackMaxAdd,
      </if>
      <if test="nWizardAttackMinAdd != null">
        nWizardAttackMinAdd,
      </if>
      <if test="nWizardAttackMaxAdd != null">
        nWizardAttackMaxAdd,
      </if>
      <if test="nPhysicalDefenceMinAdd != null">
        nPhysicalDefenceMinAdd,
      </if>
      <if test="nPhysicalDefenceMaxAdd != null">
        nPhysicalDefenceMaxAdd,
      </if>
      <if test="nMagicDefenceMinAdd != null">
        nMagicDefenceMinAdd,
      </if>
      <if test="nMagicDefenceMaxAdd != null">
        nMagicDefenceMaxAdd,
      </if>
      <if test="nHitValueAdd != null">
        nHitValueAdd,
      </if>
      <if test="nDogValueAdd != null">
        nDogValueAdd,
      </if>
      <if test="nMagicHitRateAdd != null">
        nMagicHitRateAdd,
      </if>
      <if test="nMagicDogerateAdd != null">
        nMagicDogerateAdd,
      </if>
      <if test="fHpRateRenew != null">
        fHpRateRenew,
      </if>
      <if test="fMpRateRenew != null">
        fMpRateRenew,
      </if>
      <if test="nHpRenew != null">
        nHpRenew,
      </if>
      <if test="nMpRenew != null">
        nMpRenew,
      </if>
      <if test="nMoveOneSlotTime != null">
        nMoveOneSlotTime,
      </if>
      <if test="nAttackSpeed != null">
        nAttackSpeed,
      </if>
      <if test="aDeductDizzyRate != null">
        aDeductDizzyRate,
      </if>
      <if test="aDizzyTimeAbsorbAdd != null">
        aDizzyTimeAbsorbAdd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="attrId != null">
        #{attrId,jdbcType=INTEGER},
      </if>
      <if test="nMaxHpAdd != null">
        #{nMaxHpAdd,jdbcType=INTEGER},
      </if>
      <if test="nMaxMpAdd != null">
        #{nMaxMpAdd,jdbcType=INTEGER},
      </if>
      <if test="nPhysicalAttackMinAdd != null">
        #{nPhysicalAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nPhysicalAttackMaxAdd != null">
        #{nPhysicalAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicAttackMinAdd != null">
        #{nMagicAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicAttackMaxAdd != null">
        #{nMagicAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nWizardAttackMinAdd != null">
        #{nWizardAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nWizardAttackMaxAdd != null">
        #{nWizardAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nPhysicalDefenceMinAdd != null">
        #{nPhysicalDefenceMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nPhysicalDefenceMaxAdd != null">
        #{nPhysicalDefenceMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicDefenceMinAdd != null">
        #{nMagicDefenceMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicDefenceMaxAdd != null">
        #{nMagicDefenceMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nHitValueAdd != null">
        #{nHitValueAdd,jdbcType=INTEGER},
      </if>
      <if test="nDogValueAdd != null">
        #{nDogValueAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicHitRateAdd != null">
        #{nMagicHitRateAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicDogerateAdd != null">
        #{nMagicDogerateAdd,jdbcType=INTEGER},
      </if>
      <if test="fHpRateRenew != null">
        #{fHpRateRenew,jdbcType=INTEGER},
      </if>
      <if test="fMpRateRenew != null">
        #{fMpRateRenew,jdbcType=INTEGER},
      </if>
      <if test="nHpRenew != null">
        #{nHpRenew,jdbcType=INTEGER},
      </if>
      <if test="nMpRenew != null">
        #{nMpRenew,jdbcType=INTEGER},
      </if>
      <if test="nMoveOneSlotTime != null">
        #{nMoveOneSlotTime,jdbcType=INTEGER},
      </if>
      <if test="nAttackSpeed != null">
        #{nAttackSpeed,jdbcType=INTEGER},
      </if>
      <if test="aDeductDizzyRate != null">
        #{aDeductDizzyRate,jdbcType=INTEGER},
      </if>
      <if test="aDizzyTimeAbsorbAdd != null">
        #{aDizzyTimeAbsorbAdd,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.PropsConfigPOExample" resultType="java.lang.Long">
    select count(*) from PropsConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PropsConfig
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.attrId != null">
        attrId = #{record.attrId,jdbcType=INTEGER},
      </if>
      <if test="record.nMaxHpAdd != null">
        nMaxHpAdd = #{record.nMaxHpAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nMaxMpAdd != null">
        nMaxMpAdd = #{record.nMaxMpAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nPhysicalAttackMinAdd != null">
        nPhysicalAttackMinAdd = #{record.nPhysicalAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nPhysicalAttackMaxAdd != null">
        nPhysicalAttackMaxAdd = #{record.nPhysicalAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nMagicAttackMinAdd != null">
        nMagicAttackMinAdd = #{record.nMagicAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nMagicAttackMaxAdd != null">
        nMagicAttackMaxAdd = #{record.nMagicAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nWizardAttackMinAdd != null">
        nWizardAttackMinAdd = #{record.nWizardAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nWizardAttackMaxAdd != null">
        nWizardAttackMaxAdd = #{record.nWizardAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nPhysicalDefenceMinAdd != null">
        nPhysicalDefenceMinAdd = #{record.nPhysicalDefenceMinAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nPhysicalDefenceMaxAdd != null">
        nPhysicalDefenceMaxAdd = #{record.nPhysicalDefenceMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nMagicDefenceMinAdd != null">
        nMagicDefenceMinAdd = #{record.nMagicDefenceMinAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nMagicDefenceMaxAdd != null">
        nMagicDefenceMaxAdd = #{record.nMagicDefenceMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nHitValueAdd != null">
        nHitValueAdd = #{record.nHitValueAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nDogValueAdd != null">
        nDogValueAdd = #{record.nDogValueAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nMagicHitRateAdd != null">
        nMagicHitRateAdd = #{record.nMagicHitRateAdd,jdbcType=INTEGER},
      </if>
      <if test="record.nMagicDogerateAdd != null">
        nMagicDogerateAdd = #{record.nMagicDogerateAdd,jdbcType=INTEGER},
      </if>
      <if test="record.fHpRateRenew != null">
        fHpRateRenew = #{record.fHpRateRenew,jdbcType=INTEGER},
      </if>
      <if test="record.fMpRateRenew != null">
        fMpRateRenew = #{record.fMpRateRenew,jdbcType=INTEGER},
      </if>
      <if test="record.nHpRenew != null">
        nHpRenew = #{record.nHpRenew,jdbcType=INTEGER},
      </if>
      <if test="record.nMpRenew != null">
        nMpRenew = #{record.nMpRenew,jdbcType=INTEGER},
      </if>
      <if test="record.nMoveOneSlotTime != null">
        nMoveOneSlotTime = #{record.nMoveOneSlotTime,jdbcType=INTEGER},
      </if>
      <if test="record.nAttackSpeed != null">
        nAttackSpeed = #{record.nAttackSpeed,jdbcType=INTEGER},
      </if>
      <if test="record.aDeductDizzyRate != null">
        aDeductDizzyRate = #{record.aDeductDizzyRate,jdbcType=INTEGER},
      </if>
      <if test="record.aDizzyTimeAbsorbAdd != null">
        aDizzyTimeAbsorbAdd = #{record.aDizzyTimeAbsorbAdd,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PropsConfig
    set id = #{record.id,jdbcType=INTEGER},
      attrId = #{record.attrId,jdbcType=INTEGER},
      nMaxHpAdd = #{record.nMaxHpAdd,jdbcType=INTEGER},
      nMaxMpAdd = #{record.nMaxMpAdd,jdbcType=INTEGER},
      nPhysicalAttackMinAdd = #{record.nPhysicalAttackMinAdd,jdbcType=INTEGER},
      nPhysicalAttackMaxAdd = #{record.nPhysicalAttackMaxAdd,jdbcType=INTEGER},
      nMagicAttackMinAdd = #{record.nMagicAttackMinAdd,jdbcType=INTEGER},
      nMagicAttackMaxAdd = #{record.nMagicAttackMaxAdd,jdbcType=INTEGER},
      nWizardAttackMinAdd = #{record.nWizardAttackMinAdd,jdbcType=INTEGER},
      nWizardAttackMaxAdd = #{record.nWizardAttackMaxAdd,jdbcType=INTEGER},
      nPhysicalDefenceMinAdd = #{record.nPhysicalDefenceMinAdd,jdbcType=INTEGER},
      nPhysicalDefenceMaxAdd = #{record.nPhysicalDefenceMaxAdd,jdbcType=INTEGER},
      nMagicDefenceMinAdd = #{record.nMagicDefenceMinAdd,jdbcType=INTEGER},
      nMagicDefenceMaxAdd = #{record.nMagicDefenceMaxAdd,jdbcType=INTEGER},
      nHitValueAdd = #{record.nHitValueAdd,jdbcType=INTEGER},
      nDogValueAdd = #{record.nDogValueAdd,jdbcType=INTEGER},
      nMagicHitRateAdd = #{record.nMagicHitRateAdd,jdbcType=INTEGER},
      nMagicDogerateAdd = #{record.nMagicDogerateAdd,jdbcType=INTEGER},
      fHpRateRenew = #{record.fHpRateRenew,jdbcType=INTEGER},
      fMpRateRenew = #{record.fMpRateRenew,jdbcType=INTEGER},
      nHpRenew = #{record.nHpRenew,jdbcType=INTEGER},
      nMpRenew = #{record.nMpRenew,jdbcType=INTEGER},
      nMoveOneSlotTime = #{record.nMoveOneSlotTime,jdbcType=INTEGER},
      nAttackSpeed = #{record.nAttackSpeed,jdbcType=INTEGER},
      aDeductDizzyRate = #{record.aDeductDizzyRate,jdbcType=INTEGER},
      aDizzyTimeAbsorbAdd = #{record.aDizzyTimeAbsorbAdd,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeno.cqicanfly.mybatis.entity.PropsConfigPO">
    update PropsConfig
    <set>
      <if test="attrId != null">
        attrId = #{attrId,jdbcType=INTEGER},
      </if>
      <if test="nMaxHpAdd != null">
        nMaxHpAdd = #{nMaxHpAdd,jdbcType=INTEGER},
      </if>
      <if test="nMaxMpAdd != null">
        nMaxMpAdd = #{nMaxMpAdd,jdbcType=INTEGER},
      </if>
      <if test="nPhysicalAttackMinAdd != null">
        nPhysicalAttackMinAdd = #{nPhysicalAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nPhysicalAttackMaxAdd != null">
        nPhysicalAttackMaxAdd = #{nPhysicalAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicAttackMinAdd != null">
        nMagicAttackMinAdd = #{nMagicAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicAttackMaxAdd != null">
        nMagicAttackMaxAdd = #{nMagicAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nWizardAttackMinAdd != null">
        nWizardAttackMinAdd = #{nWizardAttackMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nWizardAttackMaxAdd != null">
        nWizardAttackMaxAdd = #{nWizardAttackMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nPhysicalDefenceMinAdd != null">
        nPhysicalDefenceMinAdd = #{nPhysicalDefenceMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nPhysicalDefenceMaxAdd != null">
        nPhysicalDefenceMaxAdd = #{nPhysicalDefenceMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicDefenceMinAdd != null">
        nMagicDefenceMinAdd = #{nMagicDefenceMinAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicDefenceMaxAdd != null">
        nMagicDefenceMaxAdd = #{nMagicDefenceMaxAdd,jdbcType=INTEGER},
      </if>
      <if test="nHitValueAdd != null">
        nHitValueAdd = #{nHitValueAdd,jdbcType=INTEGER},
      </if>
      <if test="nDogValueAdd != null">
        nDogValueAdd = #{nDogValueAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicHitRateAdd != null">
        nMagicHitRateAdd = #{nMagicHitRateAdd,jdbcType=INTEGER},
      </if>
      <if test="nMagicDogerateAdd != null">
        nMagicDogerateAdd = #{nMagicDogerateAdd,jdbcType=INTEGER},
      </if>
      <if test="fHpRateRenew != null">
        fHpRateRenew = #{fHpRateRenew,jdbcType=INTEGER},
      </if>
      <if test="fMpRateRenew != null">
        fMpRateRenew = #{fMpRateRenew,jdbcType=INTEGER},
      </if>
      <if test="nHpRenew != null">
        nHpRenew = #{nHpRenew,jdbcType=INTEGER},
      </if>
      <if test="nMpRenew != null">
        nMpRenew = #{nMpRenew,jdbcType=INTEGER},
      </if>
      <if test="nMoveOneSlotTime != null">
        nMoveOneSlotTime = #{nMoveOneSlotTime,jdbcType=INTEGER},
      </if>
      <if test="nAttackSpeed != null">
        nAttackSpeed = #{nAttackSpeed,jdbcType=INTEGER},
      </if>
      <if test="aDeductDizzyRate != null">
        aDeductDizzyRate = #{aDeductDizzyRate,jdbcType=INTEGER},
      </if>
      <if test="aDizzyTimeAbsorbAdd != null">
        aDizzyTimeAbsorbAdd = #{aDizzyTimeAbsorbAdd,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeno.cqicanfly.mybatis.entity.PropsConfigPO">
    update PropsConfig
    set attrId = #{attrId,jdbcType=INTEGER},
      nMaxHpAdd = #{nMaxHpAdd,jdbcType=INTEGER},
      nMaxMpAdd = #{nMaxMpAdd,jdbcType=INTEGER},
      nPhysicalAttackMinAdd = #{nPhysicalAttackMinAdd,jdbcType=INTEGER},
      nPhysicalAttackMaxAdd = #{nPhysicalAttackMaxAdd,jdbcType=INTEGER},
      nMagicAttackMinAdd = #{nMagicAttackMinAdd,jdbcType=INTEGER},
      nMagicAttackMaxAdd = #{nMagicAttackMaxAdd,jdbcType=INTEGER},
      nWizardAttackMinAdd = #{nWizardAttackMinAdd,jdbcType=INTEGER},
      nWizardAttackMaxAdd = #{nWizardAttackMaxAdd,jdbcType=INTEGER},
      nPhysicalDefenceMinAdd = #{nPhysicalDefenceMinAdd,jdbcType=INTEGER},
      nPhysicalDefenceMaxAdd = #{nPhysicalDefenceMaxAdd,jdbcType=INTEGER},
      nMagicDefenceMinAdd = #{nMagicDefenceMinAdd,jdbcType=INTEGER},
      nMagicDefenceMaxAdd = #{nMagicDefenceMaxAdd,jdbcType=INTEGER},
      nHitValueAdd = #{nHitValueAdd,jdbcType=INTEGER},
      nDogValueAdd = #{nDogValueAdd,jdbcType=INTEGER},
      nMagicHitRateAdd = #{nMagicHitRateAdd,jdbcType=INTEGER},
      nMagicDogerateAdd = #{nMagicDogerateAdd,jdbcType=INTEGER},
      fHpRateRenew = #{fHpRateRenew,jdbcType=INTEGER},
      fMpRateRenew = #{fMpRateRenew,jdbcType=INTEGER},
      nHpRenew = #{nHpRenew,jdbcType=INTEGER},
      nMpRenew = #{nMpRenew,jdbcType=INTEGER},
      nMoveOneSlotTime = #{nMoveOneSlotTime,jdbcType=INTEGER},
      nAttackSpeed = #{nAttackSpeed,jdbcType=INTEGER},
      aDeductDizzyRate = #{aDeductDizzyRate,jdbcType=INTEGER},
      aDizzyTimeAbsorbAdd = #{aDizzyTimeAbsorbAdd,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>