<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeno.cqicanfly.mybatis.mapper.ItemMergePOMapper">
  <resultMap id="BaseResultMap" type="com.zeno.cqicanfly.mybatis.entity.ItemMergePO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="firstIndex" jdbcType="INTEGER" property="firstIndex" />
    <result column="secondIndex" jdbcType="INTEGER" property="secondIndex" />
    <result column="Eid" jdbcType="INTEGER" property="eid" />
    <result column="compose" jdbcType="VARCHAR" property="compose" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="mergeTable" jdbcType="VARCHAR" property="mergeTable" />
    <result column="circle" jdbcType="INTEGER" property="circle" />
    <result column="openserverday" jdbcType="INTEGER" property="openserverday" />
    <result column="mergelimit" jdbcType="VARCHAR" property="mergelimit" />
    <result column="limitTips" jdbcType="VARCHAR" property="limitTips" />
    <result column="area" jdbcType="INTEGER" property="area" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="redpoint" jdbcType="INTEGER" property="redpoint" />
    <result column="redpointlimit" jdbcType="VARCHAR" property="redpointlimit" />
    <result column="buttontxt10" jdbcType="VARCHAR" property="buttontxt10" />
    <result column="mergebutton10" jdbcType="INTEGER" property="mergebutton10" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, firstIndex, secondIndex, Eid, compose, level, mergeTable, circle, openserverday, 
    mergelimit, limitTips, area, text, redpoint, redpointlimit, buttontxt10, mergebutton10
  </sql>
  <select id="selectByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ItemMergePOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ItemMerge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ItemMerge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ItemMerge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ItemMergePOExample">
    delete from ItemMerge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeno.cqicanfly.mybatis.entity.ItemMergePO">
    insert into ItemMerge (id, firstIndex, secondIndex, 
      Eid, compose, level, 
      mergeTable, circle, openserverday, 
      mergelimit, limitTips, area, 
      text, redpoint, redpointlimit, 
      buttontxt10, mergebutton10)
    values (#{id,jdbcType=INTEGER}, #{firstIndex,jdbcType=INTEGER}, #{secondIndex,jdbcType=INTEGER}, 
      #{eid,jdbcType=INTEGER}, #{compose,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{mergeTable,jdbcType=VARCHAR}, #{circle,jdbcType=INTEGER}, #{openserverday,jdbcType=INTEGER}, 
      #{mergelimit,jdbcType=VARCHAR}, #{limitTips,jdbcType=VARCHAR}, #{area,jdbcType=INTEGER}, 
      #{text,jdbcType=VARCHAR}, #{redpoint,jdbcType=INTEGER}, #{redpointlimit,jdbcType=VARCHAR}, 
      #{buttontxt10,jdbcType=VARCHAR}, #{mergebutton10,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zeno.cqicanfly.mybatis.entity.ItemMergePO">
    insert into ItemMerge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="firstIndex != null">
        firstIndex,
      </if>
      <if test="secondIndex != null">
        secondIndex,
      </if>
      <if test="eid != null">
        Eid,
      </if>
      <if test="compose != null">
        compose,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="mergeTable != null">
        mergeTable,
      </if>
      <if test="circle != null">
        circle,
      </if>
      <if test="openserverday != null">
        openserverday,
      </if>
      <if test="mergelimit != null">
        mergelimit,
      </if>
      <if test="limitTips != null">
        limitTips,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="redpoint != null">
        redpoint,
      </if>
      <if test="redpointlimit != null">
        redpointlimit,
      </if>
      <if test="buttontxt10 != null">
        buttontxt10,
      </if>
      <if test="mergebutton10 != null">
        mergebutton10,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="firstIndex != null">
        #{firstIndex,jdbcType=INTEGER},
      </if>
      <if test="secondIndex != null">
        #{secondIndex,jdbcType=INTEGER},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="compose != null">
        #{compose,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="mergeTable != null">
        #{mergeTable,jdbcType=VARCHAR},
      </if>
      <if test="circle != null">
        #{circle,jdbcType=INTEGER},
      </if>
      <if test="openserverday != null">
        #{openserverday,jdbcType=INTEGER},
      </if>
      <if test="mergelimit != null">
        #{mergelimit,jdbcType=VARCHAR},
      </if>
      <if test="limitTips != null">
        #{limitTips,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="redpoint != null">
        #{redpoint,jdbcType=INTEGER},
      </if>
      <if test="redpointlimit != null">
        #{redpointlimit,jdbcType=VARCHAR},
      </if>
      <if test="buttontxt10 != null">
        #{buttontxt10,jdbcType=VARCHAR},
      </if>
      <if test="mergebutton10 != null">
        #{mergebutton10,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.ItemMergePOExample" resultType="java.lang.Long">
    select count(*) from ItemMerge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ItemMerge
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.firstIndex != null">
        firstIndex = #{record.firstIndex,jdbcType=INTEGER},
      </if>
      <if test="record.secondIndex != null">
        secondIndex = #{record.secondIndex,jdbcType=INTEGER},
      </if>
      <if test="record.eid != null">
        Eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.compose != null">
        compose = #{record.compose,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.mergeTable != null">
        mergeTable = #{record.mergeTable,jdbcType=VARCHAR},
      </if>
      <if test="record.circle != null">
        circle = #{record.circle,jdbcType=INTEGER},
      </if>
      <if test="record.openserverday != null">
        openserverday = #{record.openserverday,jdbcType=INTEGER},
      </if>
      <if test="record.mergelimit != null">
        mergelimit = #{record.mergelimit,jdbcType=VARCHAR},
      </if>
      <if test="record.limitTips != null">
        limitTips = #{record.limitTips,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=INTEGER},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.redpoint != null">
        redpoint = #{record.redpoint,jdbcType=INTEGER},
      </if>
      <if test="record.redpointlimit != null">
        redpointlimit = #{record.redpointlimit,jdbcType=VARCHAR},
      </if>
      <if test="record.buttontxt10 != null">
        buttontxt10 = #{record.buttontxt10,jdbcType=VARCHAR},
      </if>
      <if test="record.mergebutton10 != null">
        mergebutton10 = #{record.mergebutton10,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ItemMerge
    set id = #{record.id,jdbcType=INTEGER},
      firstIndex = #{record.firstIndex,jdbcType=INTEGER},
      secondIndex = #{record.secondIndex,jdbcType=INTEGER},
      Eid = #{record.eid,jdbcType=INTEGER},
      compose = #{record.compose,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      mergeTable = #{record.mergeTable,jdbcType=VARCHAR},
      circle = #{record.circle,jdbcType=INTEGER},
      openserverday = #{record.openserverday,jdbcType=INTEGER},
      mergelimit = #{record.mergelimit,jdbcType=VARCHAR},
      limitTips = #{record.limitTips,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=INTEGER},
      text = #{record.text,jdbcType=VARCHAR},
      redpoint = #{record.redpoint,jdbcType=INTEGER},
      redpointlimit = #{record.redpointlimit,jdbcType=VARCHAR},
      buttontxt10 = #{record.buttontxt10,jdbcType=VARCHAR},
      mergebutton10 = #{record.mergebutton10,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeno.cqicanfly.mybatis.entity.ItemMergePO">
    update ItemMerge
    <set>
      <if test="firstIndex != null">
        firstIndex = #{firstIndex,jdbcType=INTEGER},
      </if>
      <if test="secondIndex != null">
        secondIndex = #{secondIndex,jdbcType=INTEGER},
      </if>
      <if test="eid != null">
        Eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="compose != null">
        compose = #{compose,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="mergeTable != null">
        mergeTable = #{mergeTable,jdbcType=VARCHAR},
      </if>
      <if test="circle != null">
        circle = #{circle,jdbcType=INTEGER},
      </if>
      <if test="openserverday != null">
        openserverday = #{openserverday,jdbcType=INTEGER},
      </if>
      <if test="mergelimit != null">
        mergelimit = #{mergelimit,jdbcType=VARCHAR},
      </if>
      <if test="limitTips != null">
        limitTips = #{limitTips,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="redpoint != null">
        redpoint = #{redpoint,jdbcType=INTEGER},
      </if>
      <if test="redpointlimit != null">
        redpointlimit = #{redpointlimit,jdbcType=VARCHAR},
      </if>
      <if test="buttontxt10 != null">
        buttontxt10 = #{buttontxt10,jdbcType=VARCHAR},
      </if>
      <if test="mergebutton10 != null">
        mergebutton10 = #{mergebutton10,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeno.cqicanfly.mybatis.entity.ItemMergePO">
    update ItemMerge
    set firstIndex = #{firstIndex,jdbcType=INTEGER},
      secondIndex = #{secondIndex,jdbcType=INTEGER},
      Eid = #{eid,jdbcType=INTEGER},
      compose = #{compose,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      mergeTable = #{mergeTable,jdbcType=VARCHAR},
      circle = #{circle,jdbcType=INTEGER},
      openserverday = #{openserverday,jdbcType=INTEGER},
      mergelimit = #{mergelimit,jdbcType=VARCHAR},
      limitTips = #{limitTips,jdbcType=VARCHAR},
      area = #{area,jdbcType=INTEGER},
      text = #{text,jdbcType=VARCHAR},
      redpoint = #{redpoint,jdbcType=INTEGER},
      redpointlimit = #{redpointlimit,jdbcType=VARCHAR},
      buttontxt10 = #{buttontxt10,jdbcType=VARCHAR},
      mergebutton10 = #{mergebutton10,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>