<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeno.cqicanfly.mybatis.mapper.MergeConfigPOMapper">
  <resultMap id="BaseResultMap" type="com.zeno.cqicanfly.mybatis.entity.MergeConfigPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="firstIndex" jdbcType="INTEGER" property="firstIndex" />
    <result column="secondIndex" jdbcType="INTEGER" property="secondIndex" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="levelconds" jdbcType="INTEGER" property="levelconds" />
    <result column="rebornconds" jdbcType="INTEGER" property="rebornconds" />
    <result column="dayconds" jdbcType="INTEGER" property="dayconds" />
    <result column="Uitype" jdbcType="INTEGER" property="uitype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, firstIndex, secondIndex, name, levelconds, rebornconds, dayconds, Uitype
  </sql>
  <select id="selectByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.MergeConfigPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from MergeConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from MergeConfig
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from MergeConfig
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.MergeConfigPOExample">
    delete from MergeConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeno.cqicanfly.mybatis.entity.MergeConfigPO">
    insert into MergeConfig (id, firstIndex, secondIndex, 
      name, levelconds, rebornconds, 
      dayconds, Uitype)
    values (#{id,jdbcType=INTEGER}, #{firstIndex,jdbcType=INTEGER}, #{secondIndex,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{levelconds,jdbcType=INTEGER}, #{rebornconds,jdbcType=INTEGER}, 
      #{dayconds,jdbcType=INTEGER}, #{uitype,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zeno.cqicanfly.mybatis.entity.MergeConfigPO">
    insert into MergeConfig
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="firstIndex != null">
        firstIndex,
      </if>
      <if test="secondIndex != null">
        secondIndex,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="levelconds != null">
        levelconds,
      </if>
      <if test="rebornconds != null">
        rebornconds,
      </if>
      <if test="dayconds != null">
        dayconds,
      </if>
      <if test="uitype != null">
        Uitype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="firstIndex != null">
        #{firstIndex,jdbcType=INTEGER},
      </if>
      <if test="secondIndex != null">
        #{secondIndex,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="levelconds != null">
        #{levelconds,jdbcType=INTEGER},
      </if>
      <if test="rebornconds != null">
        #{rebornconds,jdbcType=INTEGER},
      </if>
      <if test="dayconds != null">
        #{dayconds,jdbcType=INTEGER},
      </if>
      <if test="uitype != null">
        #{uitype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeno.cqicanfly.mybatis.entity.MergeConfigPOExample" resultType="java.lang.Long">
    select count(*) from MergeConfig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update MergeConfig
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.firstIndex != null">
        firstIndex = #{record.firstIndex,jdbcType=INTEGER},
      </if>
      <if test="record.secondIndex != null">
        secondIndex = #{record.secondIndex,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.levelconds != null">
        levelconds = #{record.levelconds,jdbcType=INTEGER},
      </if>
      <if test="record.rebornconds != null">
        rebornconds = #{record.rebornconds,jdbcType=INTEGER},
      </if>
      <if test="record.dayconds != null">
        dayconds = #{record.dayconds,jdbcType=INTEGER},
      </if>
      <if test="record.uitype != null">
        Uitype = #{record.uitype,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update MergeConfig
    set id = #{record.id,jdbcType=INTEGER},
      firstIndex = #{record.firstIndex,jdbcType=INTEGER},
      secondIndex = #{record.secondIndex,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      levelconds = #{record.levelconds,jdbcType=INTEGER},
      rebornconds = #{record.rebornconds,jdbcType=INTEGER},
      dayconds = #{record.dayconds,jdbcType=INTEGER},
      Uitype = #{record.uitype,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeno.cqicanfly.mybatis.entity.MergeConfigPO">
    update MergeConfig
    <set>
      <if test="firstIndex != null">
        firstIndex = #{firstIndex,jdbcType=INTEGER},
      </if>
      <if test="secondIndex != null">
        secondIndex = #{secondIndex,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="levelconds != null">
        levelconds = #{levelconds,jdbcType=INTEGER},
      </if>
      <if test="rebornconds != null">
        rebornconds = #{rebornconds,jdbcType=INTEGER},
      </if>
      <if test="dayconds != null">
        dayconds = #{dayconds,jdbcType=INTEGER},
      </if>
      <if test="uitype != null">
        Uitype = #{uitype,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeno.cqicanfly.mybatis.entity.MergeConfigPO">
    update MergeConfig
    set firstIndex = #{firstIndex,jdbcType=INTEGER},
      secondIndex = #{secondIndex,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      levelconds = #{levelconds,jdbcType=INTEGER},
      rebornconds = #{rebornconds,jdbcType=INTEGER},
      dayconds = #{dayconds,jdbcType=INTEGER},
      Uitype = #{uitype,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>